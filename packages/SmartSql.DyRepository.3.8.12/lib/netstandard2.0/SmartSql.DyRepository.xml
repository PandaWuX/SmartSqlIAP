<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SmartSql.DyRepository</name>
    </assembly>
    <members>
        <member name="T:SmartSql.DyRepository.IRepository`2">
            <summary>
            泛型仓储接口
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TPrimary"></typeparam>
        </member>
        <member name="T:SmartSql.DyRepository.IRepositoryAsync`2">
            <summary>
            异步泛型仓储接口
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TPrimary"></typeparam>
        </member>
        <member name="T:SmartSql.DyRepository.ParamAttribute">
            <summary>
            函数参数特性
            </summary>
        </member>
        <member name="P:SmartSql.DyRepository.ParamAttribute.Name">
            <summary>
            DbDataParameter.Name
            </summary>
        </member>
        <member name="M:SmartSql.DyRepository.RepositoryBuilder.BuildRepositoryImpl(System.Type,SmartSql.Abstractions.ISmartSqlMapper,System.String)">
            <summary>
            构建仓储接口实现
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="P:SmartSql.DyRepository.SqlMapAttribute.Scope">
            <summary>
            SmartSqlMapConfig.Scope 映射
            </summary>
        </member>
        <member name="T:SmartSql.DyRepository.StatementAttribute">
            <summary>
            SqlMap.Statement 映射
            </summary>
        </member>
        <member name="P:SmartSql.DyRepository.StatementAttribute.Scope">
            <summary>
            定义 SmartSqlMap.Scope 该属性可选，默认使用仓储接口的Scope
            </summary>
        </member>
        <member name="P:SmartSql.DyRepository.StatementAttribute.Id">
            <summary>
            可选，默认使用函数名作为 Statement.Id
            </summary>
        </member>
        <member name="P:SmartSql.DyRepository.StatementAttribute.Execute">
            <summary>
            可选， 默认 Execute：Auto ，自动判断 执行类型
            </summary>
        </member>
        <member name="P:SmartSql.DyRepository.StatementAttribute.Sql">
            <summary>
            可选，当不使用 SmartSqlMap.Statement 时可直接定义 Sql
            </summary>
        </member>
        <member name="P:SmartSql.DyRepository.StatementAttribute.CommandType">
            <summary>
            命令类型
            </summary>
        </member>
        <member name="P:SmartSql.DyRepository.StatementAttribute.SourceChoice">
            <summary>
            数据源
            </summary>
        </member>
        <member name="T:SmartSql.DyRepository.ExecuteBehavior">
            <summary>
            执行行为
            </summary>
        </member>
        <member name="F:SmartSql.DyRepository.ExecuteBehavior.Auto">
            <summary>
            自动判断执行类型
            </summary>
        </member>
        <member name="F:SmartSql.DyRepository.ExecuteBehavior.Execute">
            <summary>
            返回受影响行数
            </summary>
        </member>
        <member name="F:SmartSql.DyRepository.ExecuteBehavior.ExecuteScalar">
            <summary>
            返回结果的第一行第一列的值，主要用于返回主键
            </summary>
        </member>
        <member name="F:SmartSql.DyRepository.ExecuteBehavior.Query">
            <summary>
            查询枚举对象，List
            </summary>
        </member>
        <member name="F:SmartSql.DyRepository.ExecuteBehavior.QuerySingle">
            <summary>
            查询单个对象
            </summary>
        </member>
        <member name="F:SmartSql.DyRepository.ExecuteBehavior.GetDataTable">
            <summary>
            返回DataTable
            </summary>
        </member>
        <member name="F:SmartSql.DyRepository.ExecuteBehavior.GetDataSet">
            <summary>
            返回DataSet
            </summary>
        </member>
        <member name="F:SmartSql.DyRepository.ExecuteBehavior.FillMultiple">
            <summary>
            返回 ValueTuple
            </summary>
        </member>
        <member name="F:SmartSql.DyRepository.ExecuteBehavior.GetNested">
            <summary>
            返回嵌套实体
            </summary>
        </member>
    </members>
</doc>
